#!/bin/bash
# Global and Quiz variables{{{
COMMAND="cat"
DEBUG=""
INVERSE=""
OUT="-"
SEP="	"
ERRORS=""
TOTAL=0
CORRECT=0
FILESIN=0
FILES=()
# Global variables}}}

# Parsing command line options{{{
while getopts "irhes:f:d1" opt;
do
	case $opt in
		i)
			INVERSE="1"
			[ $DEBUG ] && echo "Inverse mode is on"
			;;
		r)
			COMMAND="shuf"
			[ $DEBUG ] && echo "Random mode is on"
			;;
		s)
			SEP="$OPTARG"
			[ $DEBUG ] && echo "Separator set"
			;;
		f)
			OUT="$OPTARG"
			[ $DEBUG ] && echo "Output file set"
			;;
		d)
			DEBUG="1"
			echo "Debug flag on"
			;;
		e)
			ERRORS="1"
			[ $DEBUG ] && echo "Error reask set"
			;;
		1)
			ONETIME="1"
			[ $DEBUG ] && echo "One time only set"
			;;
		h)
			echo "Usage:"
			echo "	$0 [options] file1 [file2 [file3 ... [filen]]]"
			echo
			echo "Options:"
			echo "	-e      Reask questions that you had wrong in the end"
			echo "	-f FILE Scores file, default: -"
			echo "	-h      Show this help"
			echo "	-i      Inverse the question and answer, default: false"
			echo "	-r      Randomize the questions, default: false"
			echo "	-s SEP  Custom separator, default: tab"
			echo "  -1      One time only, don't write a stats file"
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			;;
	esac
done
if [ "$OPTIND" -gt "$#" ]
then
	echo "You have to specify at least on file" >&2
	echo "Usage:" >&2
	echo "	$0 [options] file1 [file2 [file3 ... [filen]]]" >&2
	exit
fi
# Parsing command line options}}}

# Quizzing{{{
while [ "$OPTIND" -le "$#" ]
do
	FILES[FILESIN]="${!OPTIND}"
	TMPFILE=$(mktemp)
	[ $DEBUG ] && echo "Temp file created: $TMPFILE"
	$COMMAND "${FILES[FILESIN]}" >> "$TMPFILE"
	[ $DEBUG ] && echo "File shuffled and written to temp"
	exec 3<> "$TMPFILE"
	[ $DEBUG ] && echo "Opening temp file descriptor"
	while read -u 3 line
	do
		QUESTION=$(echo "$line" | cut -n -d "$SEP" -f 1)
		[ $DEBUG ] && echo "Question extracted: $QUESTION"
		ANSWER=$(echo "$line" | cut -n -d "$SEP" -f 2)
		[ $DEBUG ] && echo "Answer extracted: $ANSWER"
		if [ $INVERSE ]
		then
			TEMP="$QUESTION"
			QUESTION="$ANSWER"
			ANSWER="$TEMP"
			[ $DEBUG ] && echo "Question and answer swapped"
		fi
		echo "$QUESTION"
		echo -n "> "
		read YOURANSWER
		echo -n "The answer is: $ANSWER, "
		if [ "$ANSWER" = "$YOURANSWER" ]
		then
			echo "This is correct!"
			CORRECT=$((CORRECT + 1))
		else
		 	echo "Incorrect..."
			if [ $ERRORS ]
			then
				if [ $INVERSE ]
				then
					echo "$ANSWER	$QUESTION" >>$TMPFILE
				else
					echo "$QUESTION	$ANSWER" >>$TMPFILE
				fi
			fi
		fi
		TOTAL=$((TOTAL + 1))
		[ $DEBUG ] && echo "Total questions asked: $TOTAL"
	done
	exec 3>&-
	[ $DEBUG ] && echo "Closing temp file descriptor"
	OPTIND=$((OPTIND + 1))
	FILESIN=$((FILESIN + 1))
done
# Quizzing}}}

# Output scores and process statistics{{{
OUTSTREAM=$(printf "_%s" "${FILES[@]}")
OUTSTREAM=".${OUTSTREAM:1}.stats"
exec 3<> "$OUTSTREAM"
[ $DEBUG ] && echo "Filedescriptor for score opened: $OUTSTREAM"

echo "$OUTSTREAM"

exec 3>&-
[ $DEBUG ] && echo "Filedescriptor for score closed"
# Output scores}}}
