#!/bin/bash
set -e

# Global and Quiz variables{{{
DISPLAY_COMMAND="cat"
F_DEBUG=""
F_INV="0"
INPUT_FILES=()
INPUT_FILES_N=0
INPUT_SEPARATOR="	"
Q_CORRECT=0
Q_TOTAL=0
Q_ERROR_N=0
Q_ERRORS=()
REDO_ERRORS=""
# Global variables}}}

# Parsing command line options{{{
while getopts "irhes:f:d1l" opt;
do
	case $opt in
		i)
			F_INV="1"
			[ $F_DEBUG ] && echo "Inverse mode is on"
			;;
		r)
			DISPLAY_COMMAND="shuf"
			[ $F_DEBUG ] && echo "Random mode is on"
			;;
		s)
			INPUT_SEPARATOR="$OPTARG"
			[ $F_DEBUG ] && echo "Separator set"
			;;
		d)
			F_DEBUG="1"
			echo "Debug flag on"
			;;
		e)
			REDO_ERRORS="1"
			[ $F_DEBUG ] && echo "Error reask set"
			;;
		h)
			echo "Usage:"
			echo "	$0 [options] file1 [file2 [file3 ... [filen]]]"
			echo
			echo "Options:"
			echo "	-e      Reask questions that you had wrong in the end"
			echo "	-f FILE Scores file, default: -"
			echo "	-h      Show this help"
			echo "	-i      Inverse the question and answer, default: false"
			echo "	-r      Randomize the questions, default: false"
			echo "	-s SEP  Custom separator, default: tab"
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			;;
	esac
done
if [ "$OPTIND" -gt "$#" ]
then
	echo "You have to specify at least on file" >&2
	echo "Usage:" >&2
	echo "	$0 [options] file1 [file2 [file3 ... [filen]]]" >&2
	exit
fi
# Parsing command line options}}}

# Quizzing{{{
TMPFILE=$(mktemp)
{
	while [ "$OPTIND" -le "$#" ]
	do
		INPUT_FILES[INPUT_FILES_N]="${!OPTIND}"
		cat "${INPUT_FILES[INPUT_FILES_N]}"
		OPTIND=$((OPTIND + 1))
		INPUT_FILES_N=$((INPUT_FILES_N + 1))
	done;
} | $DISPLAY_COMMAND > "$TMPFILE"

exec 3<> "$TMPFILE"
[ $F_DEBUG ] && echo "Opening temp file descriptor"
while read -u 3 line
do
	QUESTION=$(echo "$line" | cut -n -d "$INPUT_SEPARATOR" -f 1)
	[ $F_DEBUG ] && echo "Question extracted: $QUESTION"
	ANSWER=$(echo "$line" | cut -n -d "$INPUT_SEPARATOR" -f 2)
	[ $F_DEBUG ] && echo "Answer extracted: $ANSWER"
	if [ $F_INV = "1" ]
	then
		TEMP="$QUESTION"
		QUESTION="$ANSWER"
		ANSWER="$TEMP"
		[ $F_DEBUG ] && echo "Question and answer swapped"
	fi
	echo "$QUESTION"
	echo -n "> "
	read YOURANSWER
	echo -n "The answer is: $ANSWER, "
	if [ "$ANSWER" = "$YOURANSWER" ]
	then
		echo "This is correct!"
		Q_CORRECT=$((Q_CORRECT + 1))
	else
	 	echo "Incorrect..."
		ERRORS[Q_ERRORS_N]="$QUESTION"
		Q_ERRORS_N=$((Q_ERRORS_N + 1))
		[ $F_INV = "0" ] && echo "$QUESTION $ANSWER" >&2 ||\
			echo "$ANSWER $QUESTION" >&2
		if [ $REDO_ERRORS ]
		then
			if [ $F_INV = "0" ]
			then
				echo "$QUESTION	$ANSWER" >>$TMPFILE
			else
				echo "$ANSWER	$QUESTION" >>$TMPFILE
			fi
		fi
	fi
	Q_TOTAL=$((Q_TOTAL + 1))
	[ $F_DEBUG ] && echo "Total questions asked: $Q_TOTAL"
done
exec 3>&-
# Quizzing}}}

# Output scores and process statistics{{{
Q_GRADE=$(echo "scale=4; ($Q_CORRECT/$Q_TOTAL)*10" | bc)
ERRORS=$(echo "${ERRORS[@]}")
ERRORS=${ERRORS:1}
echo "Total: $Q_TOTAL"
echo "Correct: $Q_CORRECT"
echo "Grade: $Q_GRADE/10"
echo "Errors: $ERRORS"
# Output scores}}}
